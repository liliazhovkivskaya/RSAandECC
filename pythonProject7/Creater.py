from sympy import isprime

def find_109bit_prime():
    # Примерный поиск 109-битного простого числа, но для удобства демонстрации выберем меньшее число
    p = 7387789250824511
    while not isprime(p):
        p += 2
    return p

p = find_109bit_prime()
a = 436546564
b = 162458999

# Проверяем, что 4*a^3 + 27*b^2 не равно 0 mod p
while (4*a**3 + 27*b**2) % p == 0:
    a += 1
    b += 1

# Находим произвольную точку, которая лежит на кривой (может потребовать компьютерного поиска)
g = (0, 0)
for x in range(p):
    y_squared = (x**3 + a*x + b) % p
    y = pow(y_squared, (p-1)//2, p)
    if y == 1:  # Квадратичный вычет
        g = (x, pow(y_squared, (p+1)//4, p))
        break

n = 1103791351345391  # Примерный порядок, должен быть проверен в действительности

print(p,a,b,g,n)

